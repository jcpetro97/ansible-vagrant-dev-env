# -*- mode: ruby -*-
# vi: set ft=ruby :
DEBIAN12_IMAGE = "jcpetro97/debian12"
UBUNTU2004_IMAGE = "jcpetro97/ubuntu2004"
UBUNTU2204_IMAGE = "jcpetro97/ubuntu2204"
UBUNTU2404_IMAGE = "jcpetro97/ubuntu2404"
#OPENSUSE15_IMAGE = "jcpetro97/opensuse15"
ROCKY8_IMAGE = "jcpetro97/rocky8"
ROCKY9_IMAGE = "jcpetro97/rocky9"
# valid subnets are 192.168.56 -> 192.168.63. See README.md on adding different subnets.
SUBNET = "192.168.56"

Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  
# ubuntu control node
  config.vm.define :"ubuntu-controlnode" do |cn|
    cn.vm.box = UBUNTU2404_IMAGE
    cn.vm.hostname = "ubuntu-controlnode"
    cn.vm.network "private_network", ip: "#{SUBNET}.2"
    cn.vm.provider "virtualbox" do |vb|
      vb.memory = 2048
      vb.cpus = 2
      vb.gui = false
    end #vb
    cn.vm.synced_folder '.', '/vagrant', disabled: false
    cn.vm.provision :hosts, :sync_hosts => true
    cn.vm.provision "shell" do |s|
      s.inline = $ubinstall
      s.env   = {ANSIBLE_VERSION:ENV['ANSIBLE_VERSION']}
    end # s
    cn.vm.provision "file", source: "files/ansible.cfg", destination: "/home/vagrant/.ansible.cfg"
    cn.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
    cn.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
  end # cn  

 # RedHat control node
 config.vm.define :"redhat-controlnode" do |cn|
    cn.vm.box = ROCKY9_IMAGE
    cn.vm.hostname = "rocky9-controlnode"
    cn.vm.network "private_network", ip: "#{SUBNET}.3"
    cn.vm.provider "virtualbox" do |vb|
      vb.memory = 2048
      vb.cpus = 2
      vb.gui = false
    end #vb
    config.vm.synced_folder '.', '/vagrant', disabled: false
    cn.vm.provision :hosts, :sync_hosts => true
    cn.vm.provision "shell" do |s|
      s.inline = $rhinstall
      s.env   = {ANSIBLE_VERSION:ENV['ANSIBLE_VERSION']}
    end # s
    cn.vm.provision "file", source: "files/ansible.cfg", destination: "/home/vagrant/.ansible.cfg"
    cn.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
    cn.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
  end # redhat controlnode  

# ubuntu2004 nodes
  (1..2).each do |i|     
    config.vm.define "ubuntu2004-node#{i}" do |node|
        node.vm.box = UBUNTU2004_IMAGE 
        node.vm.hostname = "ubuntu2004-node#{i}"       
        node.vm.network :private_network, ip: "#{SUBNET}.#{i + 10}"
        node.vm.provision :hosts, :sync_hosts => true
        node.vm.synced_folder '.', '/vagrant', disabled: false
        node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
        node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
        node.vm.provision "shell", inline: "apt update ; apt install -y ansible"
    end # end node
  end  # end each loop

# ubuntu2204 nodes
    (1..2).each do |i|     
      config.vm.define "ubuntu2204-node#{i}" do |node|
        node.vm.box = UBUNTU2204_IMAGE 
        node.vm.hostname = "ubuntu2204-node#{i}"       
        node.vm.network :private_network, ip: "#{SUBNET}.#{i + 20}"
        node.vm.provision :hosts, :sync_hosts => true
        node.vm.synced_folder '.', '/vagrant', disabled: false
        node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
        node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
      end # end ubuntu2204
    end  # end each loop

# ubuntu2404 nodes
    (1..2).each do |i|     
      config.vm.define "ubuntu2404-node#{i}" do |node|
        node.vm.box = UBUNTU2404_IMAGE 
        node.vm.hostname = "ubuntu2404-node#{i}"       
        node.vm.network :private_network, ip: "#{SUBNET}.#{i + 30}"
        node.vm.provision :hosts, :sync_hosts => true
        node.vm.synced_folder '.', '/vagrant', disabled: false
        node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
        node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
      end # end node
    end  # end each loop

# # opensuse15 nodes - This is a placeholder for now
#   (1..2).each do |i|     
#     config.vm.define "opensuse15-node#{i}" do |node|
#         node.vm.box = OPENSUSE15_IMAGE
#         node.vm.hostname = "opensuse15-node#{i}"       
#         node.vm.network :private_network, ip: "#{SUBNET}.#{i + 40}"     
#         node.vm.provision :hosts, :sync_hosts => true
#         node.vm.synced_folder '.', '/vagrant', disabled: false
#         node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
#         node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
#     end # end node
#   end # end each loop  

# rocky8 nodes
  (1..2).each do |i|     
    config.vm.define "rocky8-node#{i}" do |node|
        node.vm.box = ROCKY8_IMAGE
        node.vm.hostname = "rocky8-node#{i}"       
        node.vm.network :private_network, ip: "#{SUBNET}.#{i + 50}"     
        node.vm.provision :hosts, :sync_hosts => true
        node.vm.synced_folder '.', '/vagrant', disabled: false
        node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
        node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
    end # end node node
  end # end each loop

# rocky9 nodes
(1..2).each do |i|     
  config.vm.define "rocky9-node#{i}" do |node|
      node.vm.box = ROCKY9_IMAGE
      node.vm.hostname = "rocky9-node#{i}"       
      node.vm.network :private_network, ip: "#{SUBNET}.#{i + 60}"     
      node.vm.provision :hosts, :sync_hosts => true
      node.vm.synced_folder '.', '/vagrant', disabled: false
      node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
      node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
  end # end node node
end # end each loop

# debian12 nodes
(1..2).each do |i|     
  config.vm.define "debian12-node#{i}" do |node|
      node.vm.box = DEBIAN12_IMAGE
      node.vm.hostname = "debian12-node#{i}"       
      node.vm.network :private_network, ip: "#{SUBNET}.#{i + 70}"     
      node.vm.provision :hosts, :sync_hosts => true
      node.vm.synced_folder '.', '/vagrant', disabled: false
      node.vm.provision "shell", inline: "mkdir /etc/sshkeys.local"
      node.vm.provision "shell", inline: "cp /vagrant/files/ansibletest.pub /etc/sshkeys.local"
  end # end debian12 node
end # end each loop

end # config
$ubinstall = <<UBSCRIPT
  #!/bin/bash

  # Install Python.
  /bin/echo "------> installing python3 <------"
  /usr/bin/apt update
  /usr/bin/apt -y install python3 python3-pip sshpass
  /bin/echo "------> upgrade pip <------"
  su -c '/usr/bin/python3 -m pip install --no-warn-script-location --break-system-packages --upgrade pip' vagrant
  /bin/echo "------> upgrade setuptools <------"
  su -c '/usr/bin/python3 -m pip install --no-warn-script-location --break-system-packages --upgrade setuptools' vagrant
  # Install Ansible.
  if [ -z "${ANSIBLE_VERSION}" ];
    then
      /bin/echo "------> Install Latest Version of Ansible  <------"
      su -c '/usr/bin/python3 -m pip install --no-warn-script-location --break-system-packages --user ansible' vagrant
    else
      /bin/echo "------> Install Ansible $ANSIBLE_VERSION <------"
      su -c '/usr/bin/python3 -m pip install --no-warn-script-location --break-system-packages --user ansible==$ANSIBLE_VERSION' vagrant
    fi
    
  #
  /bin/echo "------> Verify Ansible Version <------"
  su -c '~vagrant/.local/bin/ansible --version' vagrant
UBSCRIPT

$rhinstall = <<RHSCRIPT
  #!/bin/bash
  # Install Python.
  /usr/bin/echo "------> installing python3 <------"
  /usr/bin/yum -y install python3 python3-pip sshpass
  /usr/bin/echo "------> upgrade pip <------"
  su -c '/usr/bin/python3 -m pip install --no-warn-script-location --upgrade pip' vagrant
  /usr/bin/echo "------> upgrade setuptools <------"
  su -c '/usr/bin/python3 -m pip install --no-warn-script-location --upgrade setuptools' vagrant
  # Install Ansible.
  if [ -z "${ANSIBLE_VERSION}" ];
    then
        /bin/echo "------> Install Latest Version of Ansible  <------"
        su -c '/usr/bin/python3 -m pip install --no-warn-script-location --user ansible' vagrant
    else
      /bin/echo "------> Install Ansible $ANSIBLE_VERSION <------"
      su -c '/usr/bin/python3 -m pip install --no-warn-script-location --user ansible==$ANSIBLE_VERSION' vagrant
    fi
  # 
  /usr/bin/echo "------> Verify Ansible Version <------"
  su -c '~vagrant/.local/bin/ansible --version' vagrant
RHSCRIPT
